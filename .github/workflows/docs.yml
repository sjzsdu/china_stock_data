name: Deploy Documentation

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.12'

      - name: Install Poetry
        run: |
          curl -sSL https://install.python-poetry.org | python -
          echo "$HOME/.local/bin" >> $GITHUB_PATH

      - name: Configure Poetry
        run: |
          poetry config virtualenvs.create true
          poetry config virtualenvs.in-project true

      - name: Cache Poetry dependencies
        uses: actions/cache@v3
        with:
          path: .venv
          key: venv-docs-${{ runner.os }}-${{ hashFiles('poetry.lock') }}

      - name: Install dependencies
        run: |
          poetry install
          poetry add mkdocs-material mkdocstrings[python] mkdocs-jupyter

      - name: Build documentation
        run: |
          poetry run mkdocs build --clean --strict

      - name: Setup Pages
        if: github.ref == 'refs/heads/master'
        uses: actions/configure-pages@v3

      - name: Upload artifact
        if: github.ref == 'refs/heads/master'
        uses: actions/upload-pages-artifact@v2
        with:
          path: site

  deploy:
    if: github.ref == 'refs/heads/master'
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v2
